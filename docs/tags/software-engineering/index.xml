<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>software engineering on Dominik Rys</title>
    <link>https://dominikrys.com/tags/software-engineering/</link>
    <description>Recent content in software engineering on Dominik Rys</description>
    <image>
      <url>https://dominikrys.com/android-chrome-512x512.png</url>
      <link>https://dominikrys.com/android-chrome-512x512.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 07 Nov 2021 18:32:38 +0000</lastBuildDate><atom:link href="https://dominikrys.com/tags/software-engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Injecting Build-Time Variables to Nested Go Packages</title>
      <link>https://dominikrys.com/posts/injecting-build-variables-nested-go/</link>
      <pubDate>Sun, 07 Nov 2021 18:32:38 +0000</pubDate>
      
      <guid>https://dominikrys.com/posts/injecting-build-variables-nested-go/</guid>
      <description>I&amp;rsquo;ve recently tried to figure out how to inject variables to a Go executable at build-time. The available guidance online was straightforward, but it all referred to simple Go programs with rudimentary package structures that aren&amp;rsquo;t hosted remotely. None also mentioned working with the Cobra CLI library, which usually results in multiple levels of nesting in the Go application&amp;rsquo;s package structure.
To address what the other posts don&amp;rsquo;t cover, I thought I&amp;rsquo;d write this short blog post.</description>
    </item>
    
    <item>
      <title>Enforcing Uniqueness of Multiple Attributes in DynamoDB</title>
      <link>https://dominikrys.com/posts/unqiue-attributes-dynamodb/</link>
      <pubDate>Sun, 31 Oct 2021 09:53:52 +0000</pubDate>
      
      <guid>https://dominikrys.com/posts/unqiue-attributes-dynamodb/</guid>
      <description>I&amp;rsquo;ve recently tried to solve a problem that involved enforcing uniqueness of multiple attributes in DynamoDB. Surprisingly, this wasn&amp;rsquo;t a trivial undertaking. Given most of my database experience is using SQL databases, I initially started solving the problem using SQL paradigms that didn&amp;rsquo;t translate well to NoSQL.
In this post, I will describe what I learned, and how it&amp;rsquo;s possible to implement enforcing uniqueness of multiple attributes in DynamoDB.
Approaches That Don&amp;rsquo;t Work Using Condition Expressions After some initial research, I tried implementing a Conditional Put using a condition expression.</description>
    </item>
    
    <item>
      <title>Short Guide on Self-Teaching About Operating Systems</title>
      <link>https://dominikrys.com/posts/learning-operating-systems/</link>
      <pubDate>Tue, 03 Aug 2021 16:07:52 +0100</pubDate>
      
      <guid>https://dominikrys.com/posts/learning-operating-systems/</guid>
      <description>I&amp;rsquo;ve recently graduated with a Computer Science degree from the University of Birmingham. Overall, the course covered most of the fundamentals of computer science. However, the course structure changed starting from the year below me, moving the operating systems module from the third to the second year. Since I took a year out for a year in industry, this meant that I completely missed out on the operating systems module!</description>
    </item>
    
    <item>
      <title>How I Started Learning Rust</title>
      <link>https://dominikrys.com/posts/learning-rust/</link>
      <pubDate>Wed, 16 Jun 2021 18:56:21 +0100</pubDate>
      
      <guid>https://dominikrys.com/posts/learning-rust/</guid>
      <description>I wanted to learn Rust for a while. The promises of memory-safety and performance have piqued my interest and I needed to see what all the hype was about. In turn, I spent some time learning Rust on and off over the last couple of months alongside university work.
In this post, I describe how I went about learning Rust and what resources I used. I also reflect on what methods worked well and what could have possibly been skipped.</description>
    </item>
    
    <item>
      <title>How to Debug srsLTE</title>
      <link>https://dominikrys.com/posts/debug-srslte/</link>
      <pubDate>Sat, 13 Feb 2021 10:34:48 +0100</pubDate>
      
      <guid>https://dominikrys.com/posts/debug-srslte/</guid>
      <description>I&amp;rsquo;ve recently been working extensively with srsLTE for my bachelor&amp;rsquo;s dissertation. So far, the greatest difficulty has been debugging the software. In this short post, I will describe various ways I found that srsLTE can be debugged, and any pitfalls that come with them.
I&amp;rsquo;ll assume you know how to debug ordinary C/C++ programs (I&amp;rsquo;ll patiently wait here if you need to have a look into that).
Compiling srsLTE in debug mode Your first attempt at debugging may have been to compile with the Debug CMake flag, and then executing the binaries using GDB or another debugger:</description>
    </item>
    
    <item>
      <title>Compiling My C&#43;&#43; CHIP-8 Emulator to WebAssembly</title>
      <link>https://dominikrys.com/posts/compiling-chip8-to-wasm/</link>
      <pubDate>Sat, 15 Aug 2020 16:55:48 +0100</pubDate>
      
      <guid>https://dominikrys.com/posts/compiling-chip8-to-wasm/</guid>
      <description>A couple of months ago I wrote a CHIP-8 emulator in C++17, as I wanted to learn about emulation and expand my C++ knowledge outside of work. In this post I&amp;rsquo;ll explain how I went about compiling the emulator which was designed to run natively, to also run on the web using the magic of WebAssembly. You can try out the result here.
My main motivation for getting the emulator working on the web was that in its current state, it took some effort to get it up and running.</description>
    </item>
    
  </channel>
</rss>
