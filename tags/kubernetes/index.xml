<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>kubernetes on Dominik Rys</title>
    <link>https://dominikrys.com/tags/kubernetes/</link>
    <description>Recent content in kubernetes on Dominik Rys</description>
    <image>
      <url>https://dominikrys.com/android-chrome-512x512.png</url>
      <link>https://dominikrys.com/android-chrome-512x512.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 30 Mar 2022 21:37:36 +0100</lastBuildDate><atom:link href="https://dominikrys.com/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Generating a Grafana Agent Configuration for a Kubernetes Cluster</title>
      <link>https://dominikrys.com/posts/grafana-agent-config-kubernetes/</link>
      <pubDate>Wed, 30 Mar 2022 21:37:36 +0100</pubDate>
      
      <guid>https://dominikrys.com/posts/grafana-agent-config-kubernetes/</guid>
      <description>Configuring the Grafana Agent to collect metrics from nodes in a Kubernetes cluster can be quite a daunting task. Manually configuring scrape jobs for all the pods running in your cluster can be a laborious undertaking that is not maintainable in the long run, especially as new services are added. In this post, I describe a way to generate this configuration using the Grafana Agent Operator.
Possible Solutions The easiest way to manage Grafana Agent deployments is using the Grafana Agent Operator.</description>
    </item>
    
  </channel>
</rss>
