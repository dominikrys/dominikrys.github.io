<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Iptables on Dominik Rys</title>
    <link>https://dominikrys.com/tags/iptables/</link>
    <description>Recent content in Iptables on Dominik Rys</description>
    <image>
      <title>Dominik Rys</title>
      <url>https://dominikrys.com/android-chrome-512x512.png</url>
      <link>https://dominikrys.com/android-chrome-512x512.png</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Sat, 17 Apr 2021 10:44:53 +0100</lastBuildDate>
    <atom:link href="https://dominikrys.com/tags/iptables/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Transparently Proxy IP Packets With Spoofed Destinations</title>
      <link>https://dominikrys.com/posts/transparently-proxy-spoofed-ip/</link>
      <pubDate>Sat, 17 Apr 2021 10:44:53 +0100</pubDate>
      <guid>https://dominikrys.com/posts/transparently-proxy-spoofed-ip/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve recently worked on a security project which required me to transparently proxy IP packets that have had their destination IPs spoofed. By this, I mean that the destination IP in an IP packet is &lt;strong&gt;not&lt;/strong&gt; the IP of the destination which a DNS request would correctly resolve. For example, this could be due to a DNS query being spoofed and sending an IP address of another destination in reply. The diagram above shows what we want to achieve.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configuring Squid as a Transparent Proxy</title>
      <link>https://dominikrys.com/posts/squid-transparent-proxy/</link>
      <pubDate>Sat, 10 Apr 2021 10:08:45 +0100</pubDate>
      <guid>https://dominikrys.com/posts/squid-transparent-proxy/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve recently set up &lt;a href=&#34;http://www.squid-cache.org/&#34;&gt;Squid&lt;/a&gt; as a transparent proxy for a security project. What should have been relatively straightforward had me browsing through prehistoric tutorials that don&amp;rsquo;t quite work any more. In the end, I managed to get a minimal transparent proxy configuration on a modern version of Linux hosted in the cloud.&lt;/p&gt;
&lt;p&gt;With the hopes of saving someone some time that may be embarking on a similar journey, I thought I&amp;rsquo;d write this post. We discuss HTTP transparent proxying at the start, but provide resources for allowing support for HTTPS.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
