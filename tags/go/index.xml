<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Go on Dominik Rys</title>
    <link>https://dominikrys.com/tags/go/</link>
    <description>Recent content in Go on Dominik Rys</description>
    <image>
      <url>https://dominikrys.com/android-chrome-512x512.png</url>
      <link>https://dominikrys.com/android-chrome-512x512.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 07 Nov 2021 18:32:38 +0000</lastBuildDate><atom:link href="https://dominikrys.com/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Injecting Build-Time Variables to Nested Golang Packages</title>
      <link>https://dominikrys.com/posts/injecting-build-variables-nested-go/</link>
      <pubDate>Sun, 07 Nov 2021 18:32:38 +0000</pubDate>
      
      <guid>https://dominikrys.com/posts/injecting-build-variables-nested-go/</guid>
      <description>I&amp;rsquo;ve recently tried to figure out how to inject variables to a Go executable at build-time. The available guidance online was straightforward, but it all referred to simple Go programs with rudimentary package structures that aren&amp;rsquo;t hosted remotely. None also mentioned working with the Cobra CLI library, which usually results in multiple levels of nesting in the Go application&amp;rsquo;s package structure.
To address what the other posts don&amp;rsquo;t cover, I thought I&amp;rsquo;d write this short blog post.</description>
    </item>
    
  </channel>
</rss>
